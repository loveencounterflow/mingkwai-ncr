{
  "version": 3,
  "file": "tests.js",
  "sourceRoot": "..",
  "sources": [
    "src/tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'MINGKWAI-NCR/tests'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\n{ step }                  = require 'coffeenode-suspend'\nMKNCR                     = require './main'\nISL                       = MKNCR._ISL\nu                         = MKNCR.unicode_isl\n\n#===========================================================================================================\n# HELPERS\n#-----------------------------------------------------------------------------------------------------------\n@_prune = ->\n  for name, value of @\n    continue if name.startsWith '_'\n    delete @[ name ] unless name in include\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_main = ->\n  test @, 'timeout': 3000\n\n\n#===========================================================================================================\n# TESTS\n#-----------------------------------------------------------------------------------------------------------\n@[ \"demo\" ] = ( T ) ->\n  #.........................................................................................................\n  # for glyph in MKNCR.chrs_from_text \"helo äöü你好𢕒𡕴𡕨𠤇𫠠𧑴𨒡《》【】&jzr#xe100;🖹\"\n  for glyph in MKNCR.chrs_from_text \"《🖹\"\n    cid = MKNCR.as_cid glyph\n    debug glyph, ISL.aggregate u, cid\n    # cid_hex = hex cid\n    # # debug glyph, cid_hex, find_id_text u, cid\n    # descriptions = ISL.find_entries_with_all_points u, cid\n    # urge glyph, cid_hex\n    # for description in descriptions\n    #   [ type, _, ] = ( description[ 'name' ] ? '???/' ).split ':'\n    #   help ( CND.grey type + '/' ) + ( CND.steel 'interval' ) + ': ' + ( CND.yellow \"#{hex description[ 'lo' ]}-#{hex description[ 'hi' ]}\" )\n    #   for key, value of description\n    #     continue if key in [ 'lo', 'hi', 'id', ]\n    #     help ( CND.grey type + '/' ) + ( CND.steel key ) + ': ' + ( CND.yellow value )\n    # # urge glyph, cid_hex, JSON.stringify ISL.find_all_ids    u, cid\n    # # info glyph, cid_hex, JSON.stringify ISL.find_any_ids    u, cid\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"aggregate\" ] = ( T ) ->\n  u         = MKNCR.unicode_isl\n  ISL       = MKNCR._ISL\n  probes_and_matchers = [\n    [\"q\",{\"tag\":[\"assigned\"],\"rsg\":\"u-latn\"}]\n    [\"里\",{\"tag\":[\"assigned\",\"ideograph\",\"cjk\",],\"rsg\":\"u-cjk\"}]\n    [\"䊷\",{\"tag\":[\"assigned\",\"ideograph\",\"cjk\"],\"rsg\":\"u-cjk-xa\"}]\n    [\"《\",{\"tag\":[\"assigned\",\"punctuation\",\"cjk\"],\"rsg\":\"u-cjk-sym\"}]\n    [\"🖹\",{\"tag\":[\"assigned\"]}]\n    [\"🛷\",{\"tag\":[\"unassigned\"]}]\n    [887,{\"tag\":[\"assigned\"],\"rsg\":\"u-grek\"}]\n    [888,{\"tag\":[\"unassigned\"],\"rsg\":\"u-grek\"}]\n    [889,{\"tag\":[\"unassigned\"],\"rsg\":\"u-grek\"}]\n    [890,{\"tag\":[\"assigned\"],\"rsg\":\"u-grek\"}]\n    ]\n  recipe  = { fallback: 'skip', fields: { 'tag': 'tag', 'rsg': 'assign', }, }\n  for [ probe, matcher, ] in probes_and_matchers\n    result = ISL.aggregate u, probe, recipe\n    # debug '32771', JSON.stringify [ probe, result, ]\n    T.eq result, matcher\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"SIMs, TeX formats\" ] = ( T ) ->\n  #.........................................................................................................\n  recipe =\n    fallback: 'skip'\n    fields:\n      tag:  'tag'\n      rsg:  'assign'\n      # sim:  ( values, context ) ->\n      #   ### TAINT should be a standard reducer ###\n      #   debug '7701', values\n      #   R = {}\n      #   for value in values\n      #     for name, sub_value of value\n      #       R[ name ] = sub_value\n      #   return R\n      tex:  ( values, context ) ->\n        ### TAINT should be a standard reducer ###\n        R = {}\n        for value in values\n          for name, sub_value of value\n            R[ name ] = sub_value\n        return R\n  #.........................................................................................................\n  # text  = '([Xqf]) ([里䊷䊷里]) ([Xqf])'\n  # text  = 'q里䊷f'\n  # text = '釒'\n  # text = '龵⿸釒金𤴔丨亅㐅乂'\n  probes_and_matchers = [\n    [\"龵\",{\"tag\":[\"assigned\",\"ideograph\",\"cjk\"],\"rsg\":\"u-cjk\",\"tex\":{\"codepoint\":\"{\\\\tfRaise{-0.1}\\\\cnxBabel{}龵}\"}}]\n    [\"？\",{\"tag\":[\"assigned\",\"cjk\"],\"rsg\":\"u-halfull\",\"tex\":{\"block\":\"\\\\cn{}\"}}]\n    [\"⿸\",{\"tag\":[\"assigned\",\"cjk\",\"idl\"],\"rsg\":\"u-cjk-idc\",\"tex\":{\"block\":\"\\\\mktsRsgFb{}\"}}]\n    [\"釒\",{\"tag\":[\"assigned\",\"ideograph\",\"cjk\"],\"rsg\":\"u-cjk\",\"tex\":{\"codepoint\":\"{\\\\tfPush{0.4}釒}\"}}]\n    [\"金\",{\"tag\":[\"assigned\",\"ideograph\",\"cjk\"],\"rsg\":\"u-cjk\",\"tex\":{\"block\":\"\\\\cn{}\"}}]\n    [\"𤴔\",{\"tag\":[\"assigned\",\"ideograph\",\"cjk\"],\"rsg\":\"u-cjk-xb\",\"tex\":{\"codepoint\":\"{\\\\cnxBabel{}𤴔}\"}}]\n    [\"丨\",{\"tag\":[\"assigned\",\"ideograph\",\"cjk\"],\"rsg\":\"u-cjk\",\"tex\":{\"block\":\"\\\\cn{}\"}}]\n    [\"亅\",{\"tag\":[\"assigned\",\"ideograph\",\"cjk\"],\"rsg\":\"u-cjk\",\"tex\":{\"block\":\"\\\\cn{}\"}}]\n    [\"㐅\",{\"tag\":[\"assigned\",\"ideograph\",\"cjk\"],\"rsg\":\"u-cjk-xa\",\"tex\":{\"block\":\"\\\\cnxa{}\"}}]\n    [\"乂\",{\"tag\":[\"assigned\",\"ideograph\",\"cjk\"],\"rsg\":\"u-cjk\",\"tex\":{\"block\":\"\\\\cn{}\"}}]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    description = ISL.aggregate u, probe\n    for key in Object.keys description\n      delete description[ key ] unless key in [ 'tag', 'rsg', 'tex', ]\n    # help '28107', matcher\n    # warn '28107', description\n    # debug '40223', JSON.stringify [ probe, description, ]; continue\n    T.eq description, matcher\n    # info probe\n    ###\n    urge '  tag:', ( description[ 'tag' ] ? [ '-/-' ] ).join ', '\n    urge '  rsg:', description[ 'rsg' ]\n    for sim_tag in sim_tags\n      continue unless ( value = description[ sim_tag ] )?\n      urge \"  #{sim_tag}:\", value\n    urge '  blk:', description[ 'tex' ]?[ 'block'     ] ? '-/-'\n    urge '  cp: ', description[ 'tex' ]?[ 'codepoint' ] ? '-/-'\n    ###\n  #.........................................................................................................\n  return null\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"descriptions (2)\" ] = ( T ) ->\n  probes_and_matchers = [\n    [\"⿲\",[\"u\",[\"assigned\",\"cjk\",\"idl\"],{\"block\":\"\\\\mktsRsgFb{}\"}]]\n    # [\"⿱\",[\"u\",[\"assigned\",\"cjk\",\"idl\"],{\"block\":\"\\\\mktsRsgFb{}\",\"codepoint\":\"{\\\\cnxJzr{}}\"}]]\n    [\"⿱\",[\"u\",[\"assigned\",\"cjk\",\"idl\"],{\"block\":\"\\\\mktsRsgFb{}\"}]]\n    [\"木\",[\"u\",[\"assigned\",\"ideograph\",\"cjk\"],{\"block\":\"\\\\cn{}\"}]]\n    [\"&#x1233;\",[\"u\",[\"assigned\"],{\"block\":\"\\\\mktsRsgFb{}\"}]]\n    [\"&#x1234;\",[\"u\",[\"assigned\"],{\"block\":\"\\\\mktsRsgFb{}\"}]]\n    [\"&#x1235;\",[\"u\",[\"assigned\"],{\"block\":\"\\\\mktsRsgFb{}\"}]]\n    [\"&morohashi#x1234;\",[\"morohashi\",[\"assigned\",\"cjk\",\"ideograph\"],undefined]]\n    [\"&#xe100;\",[\"jzr\",[\"assigned\",\"cjk\",\"ideograph\"],{\"block\":\"\\\\cnjzr{}\"}]]\n    [\"&jzr#xe100;\",[\"jzr\",[\"assigned\",\"cjk\",\"ideograph\"],{\"block\":\"\\\\cnjzr{}\"}]]\n    [\"&jzr#xe19f;\",[\"jzr\",[\"assigned\",\"cjk\",\"ideograph\"],{\"block\":\"\\\\cnjzr{}\"}]]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    description         = MKNCR.describe probe\n    { csg, tag, tex, }  = description\n    result              = [ csg, tag, tex, ]\n    # urge JSON.stringify [ probe, result, ]\n    # urge JSON.stringify [ probe, description, ]\n    T.eq result, matcher\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"descriptions (3)\" ] = ( T ) ->\n  description_A = MKNCR.describe '&jzr#xe100;'\n  description_B = MKNCR.describe 0xe100\n  urge description_A\n  urge description_B\n  T.eq description_A, description_B\n  # urge JSON.stringify [ probe, result, ]\n  # urge JSON.stringify [ probe, description, ]\n  # T.eq result, matcher\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MojiKura get_set_of_CJK_ideograph_cids includes u-cjk-cmpi2\" ] = ( T ) ->\n  probes_and_matchers = [\n    [ 'u-cjk-cmpi2/2f801',  '丸', [ 'cjk', 'ideograph', ], ] # mapped\n    [ 'u-cjk-cmpi1/f9ba',   '了', [ 'cjk', 'ideograph', ], ] # mapped\n    [ 'u-cjk-rad1/2f08',    '⼈', [ 'cjk', 'ideograph', ], ] # mapped\n    [ 'u-cjk/4e0d',         '不', [ 'cjk', 'ideograph', ], ] # mapped\n    [ 'u-cjk-cmpi1/f967',   '不', [ 'cjk', 'ideograph', ], ] # mapped\n    [ 'u-cjk-cmpi1/fa0e',   '﨎', [ 'cjk', 'ideograph', ], ] # original\n    [ 'u-hang-syl-ae00',    '글', [ 'cjk', 'korean', 'hangeul', ], ]\n    [ 'u-cjk-hira-3072',    'ひ', [ 'cjk', 'japanese', 'kana', 'hiragana', ], ]\n    [ 'u-cjk-sym/3001',     '、', [ 'cjk', 'punctuation',        ], ]\n    [ 'u-cjk-sym/3004',     '〄', [ 'cjk', 'symbol',             ], ]\n    [ 'u-cjk-sym/3005',     '々', [ 'cjk', 'ideograph',          ], ]\n    [ 'u-cjk-sym/3008',     '〈', [ 'cjk', 'punctuation',        ], ]\n    [ 'u-cjk-sym/3012',     '〒', [ 'cjk', 'symbol',             ], ]\n    [ 'u-cjk-sym/3013',     '〓', [ 'cjk', 'ideograph', 'geta',  ], ]\n    [ 'u-cjk-sym/3014',     '〔', [ 'cjk', 'punctuation',        ], ]\n    [ 'u-cjk-sym/3020',     '〠', [ 'cjk', 'symbol',             ], ]\n    [ 'u-cjk-sym/3021',     '〡', [ 'cjk', 'ideograph',          ], ]\n    [ 'u-cjk-sym/302a',     '〪', [ 'cjk', 'punctuation',        ], ]\n    [ 'u-cjk-sym/3031',     '〱', [ 'cjk', 'kana',               ], ]\n    [ 'u-cjk-sym/3036',     '〶', [ 'cjk', 'symbol',             ], ]\n    [ 'u-cjk-sym/3038',     '〸', [ 'cjk', 'ideograph',          ], ]\n    [ 'u-cjk-sym/303d',     '〽', [ 'cjk', 'symbol',             ], ]\n\n    ]\n  #.........................................................................................................^\n  ### from `mojikura/src/utilities.coffee`: ###\n  L = {}\n  L._set_from_facet = ( key, value ) ->\n    R = new Set()\n    for { lo, hi, } in MKNCR._ISL.find_entries MKNCR.unicode_isl, key, value\n      R.add cid for cid in [ lo .. hi ]\n    return R\n  #.........................................................................................................^\n  ### from `mojikura/src/utilities.coffee`: ###\n  L.get_set_of_CJK_ideograph_cids = ->\n    return R if ( R = L.get_set_of_CJK_ideograph_cids._R )?\n    return L.get_set_of_CJK_ideograph_cids._R = L._set_from_facet 'tag', 'ideograph'\n  #.........................................................................................................^\n  ### TAINT should also check above methods include expected glyphs ###\n  cjk_cids = L.get_set_of_CJK_ideograph_cids()\n  for [ _, glyph, tags, ] in probes_and_matchers\n    cid             = MKNCR.as_cid glyph\n    description     = MKNCR.describe cid\n    { fncr, }       = description\n    glyph_tags      = description[ 'tag' ]\n    glyph_tags_txt  = glyph_tags.join ', '\n    for tag in tags\n      if tag in glyph_tags\n        T.ok true\n        help \"#{fncr} #{glyph}   has tag #{tag}: #{glyph_tags_txt}\"\n      else\n        urge \"#{fncr} #{glyph} lacks tag #{tag}: #{glyph_tags_txt}\"\n        T.fail \"#{fncr} #{glyph}: lacks tag #{tag}\"\n    # debug ( cjk_cids.has cid ), JSON.stringify description\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"jzr_as_xncr\" ] = ( T ) ->\n  glyph       = \"&jzr#xe234;\"\n  glyph_uchr  = MKNCR.jzr_as_uchr glyph\n  glyph_r1    = MKNCR.jzr_as_xncr glyph\n  glyph_r2    = MKNCR.jzr_as_xncr glyph_uchr\n  # debug '32900', [ glyph, glyph_uchr, glyph_r1, glyph_r2, ]\n  # debug '32900', MKNCR.jzr_as_xncr 'x'\n  T.eq glyph_uchr, ''\n  T.eq glyph_r1, '&jzr#xe234;'\n  T.eq glyph_r2, '&jzr#xe234;'\n  T.eq ( MKNCR.jzr_as_xncr 'x' ), 'x'\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_2 = ->\n  #.........................................................................................................\n  # tag = 'sim/is-target/global'\n  tags = [\n    'global'\n    'components'\n    'components/search'\n    'false-identity'\n    ]\n  for tag in tags\n    echo tag\n    search_tag  = \"sim/is-target/#{tag}\"\n    entry_tag   = \"sim/source/#{tag}\"\n    for entry in MKNCR._ISL.find_entries u, 'tag', search_tag\n      ### Silently assuming that all relevant entries represent single-character intervals ###\n      target_glyph_info = MKNCR.analyze ( cid = entry[ 'lo' ] )\n      target_glyph      = target_glyph_info[ 'uchr' ]\n      target_fncr       = target_glyph_info[ 'fncr' ]\n      source_glyph      = entry[ entry_tag ]\n      source_glyph_info = MKNCR.analyze source_glyph\n      source_fncr       = source_glyph_info[ 'fncr' ]\n      echo target_fncr, target_glyph, '<-', source_fncr, source_glyph\n  #.........................................................................................................\n  return null\n\n\n############################################################################################################\nunless module.parent?\n  # debug '0980', JSON.stringify ( Object.keys @ ), null, '  '\n  include = [\n    # # \"demo\"\n    \"aggregate\"\n    \"SIMs, TeX formats\"\n    \"jzr_as_xncr\"\n    \"MojiKura get_set_of_CJK_ideograph_cids includes u-cjk-cmpi2\"\n    \"descriptions (2)\"\n    \"descriptions (3)\"\n    ]\n  @_prune()\n  @_main()\n\n\n\n"
  ]
}